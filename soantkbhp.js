{
  const back_to_top = document.getElementById('back-to-top');
  scrollFunction();
  back_to_top.addEventListener('click', function() {
    document.body.scrollTop = 0;
    document.documentElement.scrollTop = 0;
  });
  window.onscroll = function() {scrollFunction()};
  function scrollFunction() {
    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
      back_to_top.style.display = "block";
    } else {
      back_to_top.style.display = "none";
    }
  }
}
document.getElementById('btnCopy').addEventListener('click', ButtonCopy);
//------------------------------------------------Declare--------------------------------------------------------------
const listColumns = [//22
  'STT', 'MaMH', 'MaLop', 'TenMH', 'MaGV',
  'TenGV', 'SiSo', 'SoTc', 'ThucHanh', 'HTGD',
  'Thu', 'Tiet', 'CachTuan', 'PhongHoc', 'KhoaHoc',
  'HocKy', 'NamHoc', 'HeDT', 'KhoaQL', 'NBD',
  'NKT', 'GhiChu'
];
const container = document.getElementById('container');
const start_data = document.getElementById('start-data');
const table_select = document.getElementById('table-select');
const body_table  = document.getElementById('body-table');
const danhsach_selected = document.getElementById('danhsach-selected');
const info_danhsach_selected = document.getElementById('info-danhsach-selected');
//const status_text_info =document.getElementById('status-text-info');
const show_list_malop = document.getElementById('show-list-malop');
const show_TongTC = document.getElementById('show-TongTC');

var data_tkb = '';//Object d·ªØ li·ªáu t·ª´ file excel t·∫•t c·∫£ m√¥n h·ªçc
//üê•üê§üê£fix buggggg l·∫ßn 2: h√¥m nay l√† m·ªôt bu·ªïi chi·ªÅu th·ª© 7 b·∫•t ch·ª£t chi·∫øc l√° r∆°i nh∆∞ng r·ª•ng xu·ªëng 2 chi·∫øc gi·ªëng nhau nh∆∞ng kh√°c t√≠nh ch·∫•t h√≥a h·ªçc d·∫´n-ƒë·∫øn-bugg-to√†n-c·ª•c b·∫ßu ∆°i th∆∞∆°ng l·∫•y b√≠ c√πng tuy r·∫±ng x√≥a code
//v√¨ m·ªói m·ªôt code class kh√¥ng ch·ªâ xu·∫•t hi·ªán m·ªôt l·∫ßn- ƒë·ªëi v·ªõi c√°c m√¥n c√≥ 2 3 ng√†y h·ªçc tr·ªü l√™n s·∫Ω kh√°c v·ªÅ th·ª© v√† ti·∫øt h·ªçc ph·∫£i check ƒë·ªÉ kh√¥ng b·ªã tr√πng
//check box Ch·ªçn khi b·ªã click v√†o s·∫Ω ph·∫£i auto click c√°i li√™n quan (tr√πng m√£ MH) c√≤n l·∫°i
//check box Ch·ªçn s·∫Ω ƒë∆∞·ª£c ƒë·ªãnh danh b·∫±ng Class={M√£L·ªõp} v√¨ class c√≥ th·ªÉ t·ªìn t·∫°i ·ªü nhi·ªÅu element (getElementsByClassName ->HTML Collection[])
var MyCodeClassList = [];//Danh s√°ch {MaMH} c√°c l·ªõp h·ªçc ƒë√£ ch·ªçn -> ƒë√£ check tr√πng l·ªãch m·ªõi ƒë∆∞·ª£c th√™m v√†o
//info_lop l√† m·∫£ng ch·ª©a 1 d√≤ng trong file data_input
//array_info_lop l√† m·∫£ng ch·ª©a m·∫£ng info c√°c d√≤ng data m√¥n h·ªçc trong data_input v√¨ c√≥ m√¥n h·ªçc s·∫Ω >1 d√≤ng nh∆∞ng kh√°c th·ª©, ti·∫øt h·ªçc, ch·ªâ gi·ªëng m·ªói t√™n , m√£, üôÇ
var MyInfoClassList = [];//Danh s√°ch ch·ª©a {info} c√°c l·ªõp h·ªçc ƒë√£ ch·ªçn (bao g·ªìm tr√πng MaMH nh∆∞ng kh√°c thu tiet)
var listElementsCheckBox = [];//M·∫£ng c√°c element-checbox-Loc
var TongTc = 0;//s·ªë t√≠nh ch·ªâ c·ªßa danh s√°ch ƒëang ch·ªçn
var textforcopy_malop_list ='';//string
//--------------------------------------------------EndDeclare-------------------------------------------------------------
//--------------------------------------------------SetUp-------------------------------------------------------------
//push elementCheckBox to array
listColumns.forEach(element => {
  ////set size ALL BOX text-input 
  //document.getElementById(`cell-${element}`).size = 10;
  listElementsCheckBox.push(document.getElementById(element));
});
//set envent show/hide for elementCheckBoxs
listElementsCheckBox.forEach(element => {
  element.addEventListener('click', ()=>{
    ShowOrHideCol(element);
  });
});
//---------------------------------------------------EndSetUp--------------------------------------------------------
function ButtonCopy() {
  var textArea = document.createElement("textarea");
  textArea.value = textforcopy_malop_list;
  document.body.appendChild(textArea);
  textArea.focus();
  textArea.select();
  try {
    document.execCommand('copy');
  } catch (err) {
    ShowErrorByAlert(err);
  }
  document.body.removeChild(textArea);
}
function ReadJsonFile(file) {//return Promise resolve -> data in file json
  return new Promise(
    function (resolve) {
      var rawFile = new XMLHttpRequest();
      rawFile.overrideMimeType("application/json");
      rawFile.open("GET", file, true);
      rawFile.onreadystatechange = () => {
        if (rawFile.readyState === 4 && rawFile.status == "200") {
          resolve(rawFile.responseText);
        }//else resolve(null);
      }
      rawFile.send(null);
    }
  )
}
function GetInfoClassByMaLopThuTiet(maLop) {//return array [object info_lop] 
  var array_infoLop = [];
  if(data_tkb){
    for (const datalop of data_tkb) {
      if (datalop.MaLop == maLop) {
        array_infoLop.push(datalop);
      }
    }
  }else{
    return false;
  }
  return array_infoLop;
}
function ShowOrHideCol(elementCheckBox) {
  //=>if checked ? show:hide -> elements
  var ShowOrHide = 'none';//hide
  if (elementCheckBox.checked) ShowOrHide = '';//show
  var listCell = document.getElementsByName(`cell-${elementCheckBox.id}`); 
  listCell.forEach(element =>{
    element.style.display  = ShowOrHide;
  });
}
function handle_show_list_malop() {
  var list_malop_show = '';
  textforcopy_malop_list ='';
  MyCodeClassList.forEach(element => {
    list_malop_show += `${element}</br>`;
    textforcopy_malop_list += `${element}\n`;
  });
  show_list_malop.innerHTML = list_malop_show;
}
function InnerData2List(array_infolop) {//add codeclass to MyCodeClassList and Inner Data to site
  //TODO:innerHTML ra list nav
  // danhsach_selected: List   //<a class="list-group-item list-group-item-action" data-bs-toggle="list" href="#list-home" role="tab">Demo1</a>
  // info_danhsach_selected: Info for List  //<div class="tab-pane fade" id="list-home" role="tabpanel">Demo1</br>Demo1</br>Demo1</br>Demo1</div>
  var thu_tiet ='';
  array_infolop.forEach(info_lop => {
    MyInfoClassList.push(info_lop);//ph·∫£i push h·∫øt v√†o ƒë·ªÉ get info tkb
    thu_tiet += `*th·ª©:${info_lop.Thu}-ti·∫øt:${info_lop.Tiet}`;
  });
  MyCodeClassList.push(array_infolop[0].MaLop);//ch·ªâ c·∫ßn push m·ªôt m√£ l·ªõp ƒë·∫°i di·ªán
  var id = array_infolop[0].MaLop;
  id = id.replace(/[.,\/#!$%\^&\*;:{}=\-_`~()]/g,"");//v√¨ d√πng ƒë·ªÉ t·∫°o id n√™n ph·∫£i x√≥a h·∫øt c√°c k√≠ t·ª± ƒë·∫∑c bi·ªát "."...

  danhsach_selected.innerHTML += 
  `<a class="list-group-item-success mt-1" data-bs-toggle="list" href="#${id}" role="tab" style="text-decoration: none;border-style: solid;">${array_infolop[0].TenMH}</a>`;
  info_danhsach_selected.innerHTML +=
  `<div class="tab-pane fade" id="${id}" role="tabpanel">
T√™n m√¥n h·ªçc: ${array_infolop[0].TenMH}</br>M√£ l·ªõp: ${array_infolop[0].MaLop}</br>Th·ª© - ti·∫øt: ${thu_tiet}</br>GV: ${array_infolop[0].TenGV}</br>
<button type="button" class="btn btn-danger btn-sm" onclick="DeleteMonHoc('${array_infolop[0].MaLop}')">B·ªè ch·ªçn m√¥n h·ªçc n√†y</button>
</div>`;
  handle_show_list_malop();
  //handle_show_TongTC
  if(array_infolop[0].SoTc !== undefined) TongTc += parseInt(array_infolop[0].SoTc);
  show_TongTC.innerHTML = TongTc;
}
function OutnerData2List(array_infolop) {//remove codeclass to MyCodeClassList, MyCodeClassList and Data in HTML
  MyInfoClassList = MyInfoClassList.filter(item => item.MaLop !== array_infolop[0].MaLop);//remove
  MyCodeClassList = MyCodeClassList.filter(item => item !== array_infolop[0].MaLop);//remove
  var id = array_infolop[0].MaLop;
  id = id.replace(/[.,\/#!$%\^&\*;:{}=\-_`~()]/g,"");//v√¨ d√πng ƒë·ªÉ t·∫°o id n√™n ph·∫£i x√≥a h·∫øt c√°c k√≠ t·ª± ƒë·∫∑c bi·ªát "."...
  document.getElementById(id).remove();//remove item kh·ªèi info-danhsach-selected
  //https://stackoverflow.com/questions/10572735/javascript-getelement-by-href
  var i_danhsach_selected = document.querySelectorAll(`a[href='#${id}']`);//remove item kh·ªèi danhsach-selected
  i_danhsach_selected[0].remove();//m·∫£ng n√†y th√¨ ch·∫Øc ch·∫Øn ch·ªâ 1pt duy nh·∫•t v√¨ href ƒë∆∞·ª£c t·∫°o t·ª´ id m√† :>
  handle_show_list_malop();
  //handle_show_TongTC
  if(array_infolop[0].SoTc !== undefined) TongTc -= parseInt(array_infolop[0].SoTc);
  show_TongTC.innerHTML = TongTc;
}
function DeleteMonHoc(malop) {
  // //https://stackoverflow.com/questions/6267816/getting-element-by-a-custom-attribute-using-javascript
  // var checkBoxChon =  document.querySelector(`input[value-malop="${malop}"]`);
  var checkBoxChons =  document.getElementsByClassName(malop);
  checkBoxChons = [...checkBoxChons];
  var aray_info_lop = GetInfoClassByMaLopThuTiet(malop);//FIXME: c√≥ th·ªÉ get t·ª´ m·∫£ng MyInfoClassList[];
  checkBoxChons.forEach(checkBoxChon => {
    checkBoxChon.checked = false;
  });
  OutnerData2List(aray_info_lop);
}
async function CheckAndAddClass2ListChon(checkboxChon) {
  var maLop = checkboxChon.getAttribute('value-malop');
  var array_infolop = GetInfoClassByMaLopThuTiet(maLop);//info_lop is array
  var checkboxChonCungMaLops = document.getElementsByClassName(maLop);//checkboxChonCungMaLops l√∫c n√†y l√† HTML collection
  checkboxChonCungMaLops = [...checkboxChonCungMaLops];//https://stackoverflow.com/questions/222841/most-efficient-way-to-convert-an-htmlcollection-to-an-array
  if (checkboxChon.checked) {
    var err = await CheckTrungThuTiet(array_infolop);
    if (!err) {
      InnerData2List(array_infolop);
      checkboxChonCungMaLops.forEach(checkBox => {//auto click checkbox c√πng l·ªõp h·ªçc
        checkBox.checked = true;
      });
    }else{
      checkboxChon.checked = false;
      ShowErrorByAlert(err);
    }
  }else{
    checkboxChonCungMaLops.forEach(checkBox => {//auto click checkbox c√πng l·ªõp h·ªçc
      checkBox.checked = false;
    });
    OutnerData2List(array_infolop);
  }
}
function ShowErrorByAlert(err) {
  alert("L·ªói: " + err);
}
function CheckTrungThuTiet(array_inputlop) {//return (Promise-function) resolve->(false -> kh√¥ng b·ªã tr√πng | err) 
  return new Promise(
    function (resolve) {
      if(MyInfoClassList){
        var ThuTrung, e_Tiet, i_Tiet;
        array_inputlop.forEach(input_lop => {
          ThuTrung = [];
          if(input_lop.Thu != '*' & input_lop.Thu != '' & input_lop.Tiet != '*' & input_lop.Tiet != ''){
            MyInfoClassList.forEach(e_lop => {
              if (e_lop.Thu === input_lop.Thu) {
                ThuTrung.push(e_lop);
              }
            });
            if(ThuTrung){
              try {
                ThuTrung.forEach(e_lop => {
                  e_Tiet = e_lop.Tiet;
                  i_Tiet = input_lop.Tiet;
                  for (const e of e_Tiet) {
                    for (const i of i_Tiet) {
                      if (e === i){
                        throw 'üì¢Tr√πng th·ªùi gian h·ªçc v·ªõi m√¥n:\n'+e_lop.TenMH+' - Th·ª©: '+e_lop.Thu+' Ti·∫øt: '+e_lop.Tiet;//err
                      }
                    }
                  }
                });
              } catch (err) {
                return resolve(err);
              }
            }
          }
        });
      }else resolve(false);
      resolve(false);
    }
  );
}
//------------------------------------------------Start()---------------------------------------------------------
async function Start() {
  //TODO:t·∫°m ·∫©n table, show loading ƒë·ªÉ ƒë·ª£i x·ª≠ l√Ω xong d·ªØ li·ªáu
  start_data.style.display = "";
  container.style.display = "none";
  table_select.style.display = "none";
  //FIXME: Ch∆∞a ho√†n th√†nh t√≠nh nƒÉng add file excel c·ªßa user
  try {
    var jsondata = await ReadJsonFile("./tkbhp.json");
    var data_json = JSON.parse(jsondata);
    data_tkb = data_json.data;
  } catch (error) {
    ShowErrorByAlert(error);
  }

  //TODO:render data table
  var i_data, cell_data;
  var dataTable ='';
  var lineTable ='';
  var l = data_tkb.length;
  for (let index = 0; index < l; index++) {
    i_data = data_tkb[index];
    if (i_data.TenMH && i_data.TenMH !== "T√äN M√îN H·ªåC") {//check data json m√¥n h·ªçc unknown - kh√¥ng t·ªìn t·∫°i
      //fixed: TH c√≥ >= 2 m√£ l·ªõp /1 l·ªõp üôÇ
      //üôÇ-> value-malop="${i_data.MaLop}-Thu${i_data.Thu}-Tiet${i_data.Tiet}"
      //----------------------
      //TODO- T·∫°o d√≤ng
      //m·ªói checkboxChon s·∫Ω mang "value-malop" "value-thu" "value-tiet" ch√≠nh l√† "m√£ l·ªõp"-"th·ª©"-"ti·∫øt" t∆∞∆°ng ·ª©ng v·ªõi d√≤ng n√≥,        
      lineTable =`<td name="cell-Chon"><input type="checkbox" name="cell-Chon-CheckBox" class="form-check-input ${i_data.MaLop}"
value-malop="${i_data.MaLop}" value-thu="${i_data.Thu}" value-tiet="${i_data.Tiet}"></td>`;    
      for (const element of listColumns) {
        //https://stackoverflow.com/questions/922544/using-variable-keys-to-access-values-in-javascript-objects
        //console.log((data_tkb[index])[element]);
        cell_data = i_data[element];
        if(!cell_data) cell_data = '';//check data unknown
        lineTable += `<td name="cell-${element}">${cell_data}</td>`;
      }
      //TODO- th√™m D√íNG v√†o B·∫¢NG sau khi x·ª≠ l√Ω xong
      dataTable +=`<tr>${lineTable}</tr>`;
    }
  }
  //TODO: ·∫©n loading hi·ªán site l·∫°i sau khi x·ª≠ l√Ω xong
  start_data.style.display = "none";
  container.style.display = "";
  table_select.style.display = "";
  //ƒë∆∞a d·ªØ li·ªáu ƒë√£ x·ª≠ l√Ω v√†o b·∫£ng
  body_table.innerHTML = dataTable; 

  //TODO:add event select for Checkbox Chon
  var listCellChon = document.getElementsByName("cell-Chon-CheckBox");
  //add action click CheckAndAddClass2ListChon() for ChexBoxChonsss
  listCellChon.forEach(checkboxChon => {
    checkboxChon.addEventListener('click', ()=>{
      CheckAndAddClass2ListChon(checkboxChon);
    })
  });
  
  //TODO:check all L·ªçc to Show Or Hide CheckBox-Loc
  listElementsCheckBox.forEach(element => {
    ShowOrHideCol(element);
  });
}
Start();
//design by hidang on github: github.com/hidang
